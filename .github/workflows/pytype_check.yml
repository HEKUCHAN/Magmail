name: Python Type Checker

on: [push]

jobs:
  type-check:
    runs-on: ubuntu-latest
    if: |
      ${{ !contains(github.event.head_commit.message, 'Apply Code Formatter Change') }}
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        id: setup_python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      # Poetry cache depends on OS, Python version and Poetry version.
      - name: Cache Poetry cache
        id: poetry_cache_id
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}
      # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
      - name: Cache Packages
        id: python_dependecies_id
        uses: actions/cache@v3
        with:
          path: ./venv/
          key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      - name: Install Poetry
        if: steps.poetry_cache_id.outputs.cache-hit != 'true'
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Add path for Poetry
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Config Poetry
        run: poetry config virtualenvs.in-project true --local
      - name: Install dependencies
        if: steps.python_dependecies_id.outputs.cache-hit != 'true'
        run: poetry install --with dev --no-interaction
      - name: mypy
        run: poetry run mypy --strict ./src

